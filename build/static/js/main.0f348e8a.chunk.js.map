{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","component/Login.js","component/Taks.js","component/NewTask.js","component/TaksList.js","component/NavBar.js","component/MainPage.js","component/UserProfile.js","component/Users.js","routes/index.js","index.js"],"names":["module","exports","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Login","props","className","FormControl","margin","required","fullWidth","InputLabel","htmlFor","Input","id","name","autoComplete","autoFocus","type","Button","variant","color","lassName","href","Component","Taks","Card","CardContent","Typography","this","description","status","Date","dueDate","toString","responsible","email","NewTask","handleSubmit","event","preventDefault","task","addTask","handleClose","open","moment","setOpen","bind","handleClickOpen","setStatus","handleChangeStatus","handleDateChange","handleChangeDescription","handleChangeName","handleChangeEmail","setState","action","currentStatus","target","value","date","Fab","aria-label","onClick","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","onSubmit","onChange","Select","labelId","MenuItem","selected","placeholderText","DialogActions","TaksList","taksList","items","original","handleChangeOrderByStatus","handleChangeOrderByUsers","handleChangeOrderByDate","handleOriginalList","prev","byStatus","filter","sortedNames","sort","a","b","sortedDates","map","item","i","key","style","padding","paddingTop","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","list","width","fullList","NavBar","anchor","classes","React","useState","top","left","bottom","right","toggleDrawer","AppBar","position","Toolbar","IconButton","edge","Drawer","role","onKeyDown","List","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","Fragment","component","inline","fontSize","MainPage","UserProfile","justifyContent","display","height","Users","users","getUsers","axios","get","usersBackend","data","user","Routes","path","exact","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0f348e8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\n\n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n        //Add this part of code to your serviceWorker.js\n    window.addEventListener('install', () => {\n          console.log(\"install!!\");\n    });\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React,{ Component } from \"react\";\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\n\nimport './Login.css';\n\nexport class Login extends Component{\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return (\n            <div className=\"login-form\">\n                <h1>Login</h1>\n                <FormControl margin=\"normal\" required fullWidth>\n                    <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n                    <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus />\n                </FormControl>\n                <FormControl margin=\"normal\" required fullWidth>\n                    <InputLabel htmlFor=\"password\">Password</InputLabel>\n                    <Input\n                        name=\"password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                </FormControl>\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    lassName=\"submit\"\n                    href=\"/mainpage\"\n                >\n                Sign in\n                </Button>\n            </div>\n        );\n    }\n\n}\n","import React, {Component} from 'react';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport { CardContent } from '@material-ui/core';\n\nexport class Taks extends Component{\n    constructor(props){\n        super(props);\n\n    }\n\n    render(){\n        return ( \n            <Card>\n                <CardContent>\n                    <Typography>\n                        {this.props.description}\n                    </Typography>\n                    <Typography>\n                        {this.props.status} - {new Date(this.props.dueDate).toString()}\n                    </Typography>\n                    <Typography>\n                        {this.props.responsible.name + \" \"}\n                        {this.props.responsible.email}\n                    </Typography>\n                </CardContent>\n            </Card>\n        );\n    }\n\n}","import React, {Component} from 'react';\n\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport moment from \"moment\";\n\n\nexport class NewTask extends Component{\n    constructor(props){\n        super(props);\n        console.log(this.props);\n        this.state = {\n            open : false,\n            status : '',\n            dueDate: moment(),\n            description : '',\n            name : '',\n            email : ''\n        }\n        this.setOpen = this.setOpen.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.setStatus = this.setStatus.bind(this);\n        this.handleChangeStatus = this.handleChangeStatus.bind(this);\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.handleChangeDescription = this.handleChangeDescription.bind(this);\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.setState = this.setState.bind(this);\n\n    }\n\n    setOpen(action){\n        console.log(action)\n        this.setState({\n            open: action\n          }, () => {\n            console.log(\"Open: \", this.state);\n        });\n    }\n\n    handleClickOpen(){\n        this.setOpen(true);\n    }\n\n    handleClose(){\n        this.setOpen(false);\n    }\n\n    setStatus(currentStatus){\n        this.setState = {\n            status: currentStatus\n        };\n    }\n\n    handleChangeStatus(event){\n        this.setState({status : event.target.value});\n    }\n\n    handleDateChange(date) {\n        console.log(date);\n        this.setState({\n            dueDate: date\n        });\n    }\n\n    handleChangeDescription(event){\n        event.preventDefault();\n        this.setState({description : event.target.value});\n    }\n\n    handleChangeName(event){\n        event.preventDefault();\n        this.setState({name : event.target.value});\n    }\n\n    handleChangeEmail(event){\n        console.log(\"Email \" + event.target.value);\n        event.preventDefault();\n        this.setState({email : event.target.value});\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        var task = {\"description\":this.state.description, \"responsible\":{\"name\":this.state.name, \"email\":this.state.email}, \"status\":this.state.status, \"dueDate\":this.state.dueDate };\n        this.props.addTask(task);\n        this.handleClose();\n    }\n\n\n    render(){\n        return(\n                <div>\n                <Fab color=\"primary\" aria-label=\"add\" onClick={this.handleClickOpen}>\n                        <AddIcon />\n                </Fab>\n                \n                <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">New Task</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText>\n                        Add New Task.\n                    </DialogContentText>\n                        <form className=\"form\" onSubmit={this.handleSubmit}>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"description\">Description</InputLabel>\n                                <Input id=\"description\" \n                                    type=\"text\"\n                                    name=\"description\" \n                                    onChange={this.handleChangeDescription}\n                                autoFocus />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"name\">Name</InputLabel>\n                                <Input\n                                    name=\"name\"\n                                    type=\"text\"\n                                    id=\"name\"\n                                    onChange={this.handleChangeName}\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"email\">Email</InputLabel>\n                                <Input\n                                    name=\"email\"\n                                    type=\"text\"\n                                    id=\"email\"\n                                    onChange={this.handleChangeEmail}\n                                />\n                            </FormControl>\n                            <FormControl >\n                                <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"demo-simple-select\"\n                                    onChange={this.handleChangeStatus}\n                                >\n                                    <MenuItem value={\"Ready\"}>Ready</MenuItem>\n                                    <MenuItem value={\"InProgress\"}>InProgress</MenuItem>\n                                    <MenuItem value={\"Done\"}>Done</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <div>\n                                <br/>\n                                <FormControl >\n                                    <DatePicker\n                                        id=\"due-date\"\n                                        selected={this.state.dueDate}\n                                        placeholderText=\"Due date\"\n                                        onChange={this.handleDateChange}>\n                                    </DatePicker>\n                                </FormControl>\n                            </div>  \n                            <Button type=\"submit\" color=\"primary\">\n                                Add\n                            </Button>\n                        </form >\n                    </DialogContent>\n                    <DialogActions>\n\n                    \n                    <Button onClick={this.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    </DialogActions>\n                    \n                </Dialog>\n                \n            </div>\n\n        );\n    }    \n\n\n}","import React, {Component} from 'react';\nimport {Taks} from './Taks';\nimport {NewTask} from './NewTask';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nexport class TaksList extends Component{\n    constructor(props){\n        super(props);\n        console.log(this.props.taksList);\n        this.state = {\n            items : this.props.taksList,\n            open : false,\n            original : this.props.taksList\n        }\n        this.setOpen = this.setOpen.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleChangeOrderByStatus = this.handleChangeOrderByStatus.bind(this);\n        this.handleChangeOrderByUsers = this.handleChangeOrderByUsers.bind(this);\n        this.handleChangeOrderByDate = this.handleChangeOrderByDate.bind(this);\n        this.handleOriginalList = this.handleOriginalList.bind(this);\n        this.addTask = this.addTask.bind(this);\n\n    }\n\n    addTask(task){\n        console.log(task);\n        this.setState(prev => ({\n            items: [...prev.items, task],\n        }));\n    }\n\n\n\n\n    setOpen(action){\n        console.log(action)\n        this.setState({\n            open: action\n          }, () => {\n            console.log(\"Open: \", this.state);\n        });\n    }\n\n    handleClickOpen(){\n        this.setOpen(true);\n    }\n\n    handleClose(){\n        this.setOpen(false);\n    }\n\n    handleChangeOrderByStatus(event){\n        console.log(\"Click order by Status\" , event.target.value);\n        const byStatus = this.state.items.filter(status => status.status === event.target.value);\n        this.setState({\n            items: byStatus\n          }, () => {\n            console.log(\"ChangeOrderByStatus: \", this.state);\n        });\n        this.handleClose();\n        \n    }\n\n    handleChangeOrderByUsers(){\n        console.log(\"Click Order by Names\");\n        const sortedNames = this.state.items.sort((a, b) => a.name > b.name ? 1 : -1)\n        this.setState({\n            items: sortedNames\n          }, () => {\n            console.log(\"ChangeOrderByUserName: \", this.state);\n        });\n        this.handleClose();\n    }\n\n    handleChangeOrderByDate(){\n        console.log(\"Click order by Date\")\n        const sortedDates = this.state.items.sort((a, b) => b.dueDate - a.dueDate)\n        this.setState({\n            items: sortedDates\n          }, () => {\n            console.log(\"ChangeOrderByDate: \", this.state);\n        });\n        this.handleClose();\n    }\n\n    handleOriginalList(){\n        this.setState({\n            items: this.state.original\n          }, () => {\n            console.log(\"Original: \", this.state);\n        });\n    }\n\n    render() {\n\n            \n\n\n        const taksList = this.state.items.map((item, i) => {\n            return(\n                <Taks key={i} description={item.description} dueDate={item.dueDate} responsible={item.responsible} status={item.status}/>\n            );\n        });\n\n        return (\n            <div>\n                <div style = {{ margin: \"35px\"}}>\n                    <NewTask addTask = {this.addTask} />  \n                </div>\n                  \n                <div>\n                    \n                    <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\">Filter By</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText>\n                            Select a option to filter in list.\n                        </DialogContentText>\n                        <FormControl >\n                            <Button color=\"primary\" aria-label=\"add\" onClick={this.handleChangeOrderByUsers}>Ordenar por nombre</Button>\n                        </FormControl>\n                            <br></br>\n                            <br></br>\n\n                        <FormControl >\n                            <label>Order By Status</label>\n                            <InputLabel id=\"demo-simple-select-label\"></InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={this.state.status}\n                                onChange={this.handleChangeOrderByStatus}\n                            >\n                                <MenuItem value={\"ready\"}>Ready</MenuItem>\n                                <MenuItem value={\"InProgress\"}>InProgress</MenuItem>\n                                <MenuItem value={\"done\"}>Done</MenuItem>\n                            </Select>\n                        </FormControl>\n\n                        <br></br>\n                        <br></br>\n\n                        <FormControl >\n                            <Button color=\"primary\" aria-label=\"add\" onClick={this.handleChangeOrderByDate}>Order By Date</Button>\n                        </FormControl>\n\n                        </DialogContent>\n                    </Dialog>\n                </div>\n\n\n                <div style = {{padding : \"250px\", paddingTop: \"35px\"}}>\n                    <Button color=\"primary\" aria-label=\"add\" onClick={this.handleClickOpen}>Filter</Button>\n                    <Button onClick={this.handleOriginalList} color=\"primary\">Remove Filter</Button>\n                    {taksList}\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    list: {\n        width: 250,\n    },\n      fullList: {\n        width: 'auto',\n    },\n  }));\n\nexport function NavBar(){\n    const classes = useStyles();\n\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n        }\n    \n        setState({ ...state, [anchor]: open });\n    };\n\n    const list = anchor => (\n        <div\n          className={classes.list}\n          role=\"presentation\"\n          onClick={toggleDrawer(anchor, false)}\n          onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List className={classes.root}>\n                <ListItem alignItems=\"flex-start\">\n                    <ListItemAvatar>\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary=\"Carlos Andrés Ramírez\"\n                        secondary={\n                            <React.Fragment>\n                                <Typography\n                                    component=\"span\"\n                                    variant=\"body2\"\n                                    className={classes.inline}\n                                    color=\"textPrimary\"\n                                >\n                                    Ingeniería de sistemas\n                                </Typography>\n                            </React.Fragment>\n                        }\n                    />\n                </ListItem>\n            </List>\n\n        </div>\n    )\n\n    return(\n        <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon onClick={toggleDrawer('left', true)}/>\n            <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\n                {list('left')}\n            </Drawer>\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              <Button style={{fontSize: '20px'}} color=\"inherit\" href=\"/mainpage\">Taks</Button>\n              <Button style={{fontSize: '20px'}} color=\"inherit\" href=\"/users\">Users</Button>\n              <Button style={{fontSize: '20px'}} color=\"inherit\" href=\"/userprofile\">Update Profile</Button>\n            </Typography>\n            \n            <Button color=\"inherit\" href=\"/\">Exit</Button>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n\n\n}","import React, {Component} from 'react';\nimport {TaksList} from './TaksList';\nimport {NavBar} from './NavBar';\nimport {NewTask} from './NewTask';\n\n\nexport class MainPage extends Component{\n    constructor(props){\n        super(props);\n        console.log(this.props.items);\n        this.state = {\n            items : this.props.items\n        }\n\n    }\n\n    render(){\n        return(\n            <div>\n                <NavBar />\n                <TaksList taksList={this.state.items} />\n            </div>\n        );\n    }\n}","import React,{Component} from 'react';\nimport {NavBar} from './NavBar';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport './ProfileUpdate.css';\n\nexport class UserProfile extends Component{\n    constructor(props){\n        super(props);\n\n    }\n    render(){\n        return(\n            <div>\n                <NavBar />\n\n                <div className=\"update-form\">\n                    <h1>Update Profile</h1>\n                    \n                    <Avatar alt=\"Remy Sharp\" style={{ justifyContent: \"center\", display: \"flex\", width: 100, height: 100 }} src=\"/static/images/avatar/1.jpg\" />\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n                        <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus />\n                    </FormControl>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"password\">Current Password</InputLabel>\n                        <Input\n                            name=\"password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                    </FormControl>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"password\">New Password</InputLabel>\n                        <Input\n                            name=\"password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                    </FormControl>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"password\">Confirm New Password</InputLabel>\n                        <Input\n                            name=\"password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                    </FormControl>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        lassName=\"submit\"\n                        href=\"/mainpage\"\n                    >\n                    Update\n                    </Button>\n                </div>    \n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport './Users.css';\nimport {NavBar} from './NavBar';\nimport axios from 'axios';\n\nexport class Users extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            users : [{}],\n        }\n        this.getUsers = this.getUsers.bind(this);\n    }\n\n    componentDidMount(){\n        this.getUsers();\n    }\n\n    getUsers(){\n        let usersBackend = axios.get('https://pure-reef-37959.herokuapp.com/user/getusers')\n        .then( usersBackend => {\n            this.setState({users:usersBackend.data});\n            console.log(this.state.users);\n        })\n\n    }\n\n    render(){\n        return(\n            <div>\n                <NavBar/>\n                <div className=\"root\">\n                    <h1>Usuarios del sistema</h1>\n                    <List>\n                        {this.state.users.map((user) => {\n                            \n                            return(\n                                <ListItem>\n                                    <ListItemText >\n                                        {user.name} - {user.email}\n                                    </ListItemText>\n                                </ListItem>\n                            )\n                        })}\n                    </List>\n                </div>\n\n            </div>\n\n        );\n    }\n}","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport {Login} from '../component/Login';\nimport {MainPage} from '../component/MainPage';\nimport {UserProfile} from '../component/UserProfile';\nimport {Users} from '../component/Users';\n\nexport class Routes extends Component{\n\n    render(){\n        const LoginView = () => <Login />\n        const MainPageView = () => <MainPage items={items}/>\n\n        return(\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact component = {Login} />\n                    <Route path=\"/mainpage\" exact component = {MainPageView} />\n                    <Route path=\"/userprofile\" exact component = {UserProfile} />\n                    <Route path=\"/users\" exact component = {Users} />\n                </Switch>\n            </Router>\n        )\n    }\n\n}\nconst items = [{\n    \"description\": \"Ieti - lab\",\n    \"responsible\": {\n      \"name\": \"Andres Ramirez\",\n      \"email\": \"andres@gmail.com\"\n    },\n    \"status\": \"ready\",\n    \"dueDate\": 126464645646\n},{\n    \"description\": \"Ieti - lab\",\n    \"responsible\": {\n      \"name\": \" Carlos Andres Ramirez\",\n      \"email\": \"andres@gmail.com\"\n    },\n    \"status\": \"done\",\n    \"dueDate\": 166484645646\n}, {\n    \"description\": \"Ieti - lab\",\n    \"responsible\": {\n      \"name\": \"Carlos Ramirez\",\n      \"email\": \"andres@gmail.com\"\n    },\n    \"status\": \"ready\",\n    \"dueDate\": 156474645646\n}, ];\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Routes} from './routes/index';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}